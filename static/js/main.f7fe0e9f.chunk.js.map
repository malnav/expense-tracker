{"version":3,"sources":["components/Header.js","context/GlobalState.js","components/Balance.js","components/Transaction.js","components/TransactionList.js","components/Expense.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","GlobalContext","createContext","GlobalProvider","children","useState","id","text","amount","transactions","setTransactions","Provider","value","Balance","useContext","map","transaction","reduce","acc","item","toFixed","Transaction","console","log","className","onClick","newTransactionsList","filter","t","deleteTransaction","TransactionList","Expense","amounts","AddTransaction","setText","setAmount","onSubmit","event","preventDefault","trim","alert","Math","floor","random","onChange","e","target","type","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7fe0e9f.chunk.js","sourcesContent":["const Header = () => {\n    return (\n        <>\n            <h2>Expense Tracker</h2>\n        </>\n    )\n}\nexport default Header","import React,{ createContext, useReducer, useState } from 'react'\n\n\n// Create Global State\n// const transactions = [\n//         { id: 1, text: 'Flower', amount: -20 },\n//         { id: 2, text: 'Salary', amount: 300 },\n//         { id: 3, text: 'Book', amount: -10 },\n//         { id: 4, text: 'Camera', amount: 150 }\n//     ]    \n\n// Create Global Context\nexport const GlobalContext = createContext(null)\n\nexport const GlobalProvider = ({children}) => {\n    \n    const [transactions,setTransactions] = useState([\n        { id: 1, text: 'Flower', amount: -20 },\n        { id: 2, text: 'Salary', amount: 300 },\n        { id: 3, text: 'Book', amount: -10 },\n        { id: 4, text: 'Camera', amount: 150 }\n    ]);\n\n    return (\n        <GlobalContext.Provider value={{transactions: transactions,setTransactions: setTransactions}}>\n            {children}\n        </GlobalContext.Provider>\n\n    )\n}\n","import { useContext } from \"react\"\nimport { GlobalContext } from \"../context/GlobalState\"\n\n\nconst Balance = () => {\n    \n    const {transactions} = useContext(GlobalContext)\n\n    const updateBalance = () =>{\n\n        const amounts = transactions.map(transaction => transaction.amount);\n        const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n        return total\n        \n    }\n\n    return (\n        <>\n         <h4>Your Balance</h4>\n        <h1 id=\"balance\">${updateBalance()}</h1>   \n        </>\n    )\n}\n\nexport default Balance\n","import { useContext } from \"react\"\nimport { GlobalContext } from \"../context/GlobalState\"\n\nconst Transaction = ({text, amount, id}) => {\n\n    const {transactions} = useContext(GlobalContext)\n    const {setTransactions} = useContext(GlobalContext)\n\n    console.log(transactions)\n\n    const deleteTransaction = (id) => {\n        const newTransactionsList = transactions.filter((t) => t.id !== id)\n        setTransactions(newTransactionsList)\n    }\n\n    return (\n        <>\n            <li className={amount<0 ? 'minus' : 'plus'}>{text}<span>{amount}</span><button onClick={()=>deleteTransaction(id)} className='delete-btn'>x</button></li>\n        </>\n    )\n}\n\nexport default Transaction\n","import { useContext } from \"react\"\nimport { GlobalContext } from \"../context/GlobalState\"\nimport Transaction from \"./Transaction\"\n\nconst TransactionList = () => {\n    \n    const {transactions} = useContext(GlobalContext)\n    \n    return (\n        <>\n            <h3>History</h3>\n            <ul className=\"list\">\n                {\n                    transactions.map((t) => (<Transaction key={t.id} text={t.text} amount={t.amount} id={t.id} />))\n                }\n                \n            </ul>\n        </>\n    )\n}\n\nexport default TransactionList","import { useContext } from \"react\"\nimport { GlobalContext } from \"../context/GlobalState\"\n\n\nconst Expense = () => {\n\n    const {transactions} = useContext(GlobalContext)\n    const amounts = transactions.map(transaction => transaction.amount);\n\n    const updateIncome = () => {\n        const income = amounts.filter(item => item > 0).reduce((acc, item) => (acc += item), 0).toFixed(2);\n        return income   \n    }\n    const updateExpense = () => {\n        const expense = (\n            amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n            -1\n          ).toFixed(2); \n          return expense\n    }\n    \n    return (\n        <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p className=\"money plus\">{updateIncome()}</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n          <p className=\"money minus\">{updateExpense()}</p>\n        </div>\n      </div>\n    )\n\n}\n\nexport default Expense","import { useContext, useState } from \"react\"\nimport { GlobalContext } from \"../context/GlobalState\"\n\nconst AddTransaction = () => {\n\n    \n\n    const {transactions} = useContext(GlobalContext)\n    const {setTransactions} = useContext(GlobalContext)\n    \n    const [text,setText] = useState('')\n    const [amount,setAmount] = useState('')\n\n    const AddNewTransaction = (event) => {\n        \n        event.preventDefault();\n\n        if (text.trim() === '' || amount.trim() === '')\n        {\n            alert('Please add a text and amount');\n        } else\n        {\n            const transaction = {\n              id: generateID(),\n              text: text,\n              amount: +amount\n            }\n            console.log(transaction)\n            const newTransactionsList = [...transactions,transaction]\n            console.log(newTransactionsList)\n            setTransactions(newTransactionsList)\n            setText('')\n            setAmount('')\n             \n        }\n     \n    }\n\n    // Generate random ID\n    function generateID() {\n    return Math.floor(Math.random() * 100000000);\n  }\n\n\n\n    return (\n        <>\n            <h3>Add new transaction</h3>\n            <form onSubmit={AddNewTransaction}>\n                <div className=\"form-control\">\n                    <label>Text</label>\n                    <input value={text} onChange={(e) => setText(e.target.value)} type=\"text\" placeholder=\"Enter text...\" />\n                    </div>\n                    <div className=\"form-control\">\n                    <label>Amount <br />\n                        (negative - expense, positive - income)</label>\n                    <input value={amount} onChange={(e) => setAmount(e.target.value)} type=\"number\" placeholder=\"Enter amount...\" />\n                </div>\n                <button className=\"btn\">Add transaction</button>\n            </form>\n        </>\n    )\n}\nexport default AddTransaction","import './App.css';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport TransactionList from './components/TransactionList';\nimport Expense from './components/Expense';\nimport AddTransaction from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    \n      <div className=\"container\">\n        <Header />\n        <GlobalProvider>\n          <Balance />\n          <Expense />\n          <TransactionList />\n          <AddTransaction />\n        </GlobalProvider>\n      \n      </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}